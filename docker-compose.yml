version: '3.7'

##
# Note: this example might only work with linux + using `network_mode:host` because of 2 reasons:
#
# 1. When specifying an internal docker network, other containers are only available using dns based routing:
#    e.g. from tigerbeetle_0, the other replicas are available at `tigerbeetle_1:3002` and
#    `tigerbeetle_2:3003` respectively.
#
# 2. Tigerbeetle performs some validation of the ip address provided in the `--addresses` parameter
#    and won't let us specify a custom domain name.
#
# The workaround for now is to use `network_mode:host` in the containers instead of specifying our
# own internal docker network
##docker run --security-opt seccomp=unconfined -v $(pwd)/data:/data ghcr.io/tigerbeetle/tigerbeetle format --cluster=0 --replica=0 --replica-count=1 /data/0_0.tigerbeetle

services:
  tigerbeetle_0:
    image: ghcr.io/tigerbeetle/tigerbeetle:debug
    command: '$(pwd)/data:/data start --addresses=0.0.0.0:3000 /data/0_0.tigerbeetle'
    network_mode: host
    cap_add:
      - IPC_LOCK
    volumes:
      - ./data:/data
    security_opt:
      - 'seccomp=unconfined'
